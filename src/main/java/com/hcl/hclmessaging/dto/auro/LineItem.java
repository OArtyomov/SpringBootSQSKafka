/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hcl.hclmessaging.dto.auro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LineItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -341864138762638834L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LineItem\",\"namespace\":\"com.hcl.hclmessaging.dto.auro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"productId\",\"type\":\"string\"},{\"name\":\"productName\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"storeId\",\"type\":\"string\"},{\"name\":\"fulfillmentType\",\"type\":\"string\"},{\"name\":\"sku\",\"type\":{\"type\":\"record\",\"name\":\"Sku\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"lineItemPrice\",\"type\":{\"type\":\"record\",\"name\":\"LineItemPrice\",\"fields\":[{\"name\":\"currencyCode\",\"type\":\"string\"},{\"name\":\"itemPriceBeforeDiscount\",\"type\":\"int\"},{\"name\":\"discount\",\"type\":\"int\"},{\"name\":\"itemPriceAfterDiscount\",\"type\":\"int\"}]}},{\"name\":\"images\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Image\",\"fields\":[{\"name\":\"url\",\"type\":\"string\"}]}}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LineItem> ENCODER =
      new BinaryMessageEncoder<LineItem>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LineItem> DECODER =
      new BinaryMessageDecoder<LineItem>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<LineItem> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<LineItem> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LineItem>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this LineItem to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a LineItem from a ByteBuffer. */
  public static LineItem fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence productId;
  @Deprecated public java.lang.CharSequence productName;
  @Deprecated public int quantity;
  @Deprecated public java.lang.CharSequence storeId;
  @Deprecated public java.lang.CharSequence fulfillmentType;
  @Deprecated public com.hcl.hclmessaging.dto.auro.Sku sku;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LineItem() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param productId The new value for productId
   * @param productName The new value for productName
   * @param quantity The new value for quantity
   * @param storeId The new value for storeId
   * @param fulfillmentType The new value for fulfillmentType
   * @param sku The new value for sku
   */
  public LineItem(java.lang.CharSequence id, java.lang.CharSequence productId, java.lang.CharSequence productName, java.lang.Integer quantity, java.lang.CharSequence storeId, java.lang.CharSequence fulfillmentType, com.hcl.hclmessaging.dto.auro.Sku sku) {
    this.id = id;
    this.productId = productId;
    this.productName = productName;
    this.quantity = quantity;
    this.storeId = storeId;
    this.fulfillmentType = fulfillmentType;
    this.sku = sku;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return productId;
    case 2: return productName;
    case 3: return quantity;
    case 4: return storeId;
    case 5: return fulfillmentType;
    case 6: return sku;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: productId = (java.lang.CharSequence)value$; break;
    case 2: productName = (java.lang.CharSequence)value$; break;
    case 3: quantity = (java.lang.Integer)value$; break;
    case 4: storeId = (java.lang.CharSequence)value$; break;
    case 5: fulfillmentType = (java.lang.CharSequence)value$; break;
    case 6: sku = (com.hcl.hclmessaging.dto.auro.Sku)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.lang.CharSequence getProductId() {
    return productId;
  }

  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.CharSequence value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'productName' field.
   * @return The value of the 'productName' field.
   */
  public java.lang.CharSequence getProductName() {
    return productName;
  }

  /**
   * Sets the value of the 'productName' field.
   * @param value the value to set.
   */
  public void setProductName(java.lang.CharSequence value) {
    this.productName = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'storeId' field.
   * @return The value of the 'storeId' field.
   */
  public java.lang.CharSequence getStoreId() {
    return storeId;
  }

  /**
   * Sets the value of the 'storeId' field.
   * @param value the value to set.
   */
  public void setStoreId(java.lang.CharSequence value) {
    this.storeId = value;
  }

  /**
   * Gets the value of the 'fulfillmentType' field.
   * @return The value of the 'fulfillmentType' field.
   */
  public java.lang.CharSequence getFulfillmentType() {
    return fulfillmentType;
  }

  /**
   * Sets the value of the 'fulfillmentType' field.
   * @param value the value to set.
   */
  public void setFulfillmentType(java.lang.CharSequence value) {
    this.fulfillmentType = value;
  }

  /**
   * Gets the value of the 'sku' field.
   * @return The value of the 'sku' field.
   */
  public com.hcl.hclmessaging.dto.auro.Sku getSku() {
    return sku;
  }

  /**
   * Sets the value of the 'sku' field.
   * @param value the value to set.
   */
  public void setSku(com.hcl.hclmessaging.dto.auro.Sku value) {
    this.sku = value;
  }

  /**
   * Creates a new LineItem RecordBuilder.
   * @return A new LineItem RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.LineItem.Builder newBuilder() {
    return new com.hcl.hclmessaging.dto.auro.LineItem.Builder();
  }

  /**
   * Creates a new LineItem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LineItem RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.LineItem.Builder newBuilder(com.hcl.hclmessaging.dto.auro.LineItem.Builder other) {
    return new com.hcl.hclmessaging.dto.auro.LineItem.Builder(other);
  }

  /**
   * Creates a new LineItem RecordBuilder by copying an existing LineItem instance.
   * @param other The existing instance to copy.
   * @return A new LineItem RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.LineItem.Builder newBuilder(com.hcl.hclmessaging.dto.auro.LineItem other) {
    return new com.hcl.hclmessaging.dto.auro.LineItem.Builder(other);
  }

  /**
   * RecordBuilder for LineItem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LineItem>
    implements org.apache.avro.data.RecordBuilder<LineItem> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence productId;
    private java.lang.CharSequence productName;
    private int quantity;
    private java.lang.CharSequence storeId;
    private java.lang.CharSequence fulfillmentType;
    private com.hcl.hclmessaging.dto.auro.Sku sku;
    private com.hcl.hclmessaging.dto.auro.Sku.Builder skuBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hcl.hclmessaging.dto.auro.LineItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.productName)) {
        this.productName = data().deepCopy(fields()[2].schema(), other.productName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quantity)) {
        this.quantity = data().deepCopy(fields()[3].schema(), other.quantity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.storeId)) {
        this.storeId = data().deepCopy(fields()[4].schema(), other.storeId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fulfillmentType)) {
        this.fulfillmentType = data().deepCopy(fields()[5].schema(), other.fulfillmentType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sku)) {
        this.sku = data().deepCopy(fields()[6].schema(), other.sku);
        fieldSetFlags()[6] = true;
      }
      if (other.hasSkuBuilder()) {
        this.skuBuilder = com.hcl.hclmessaging.dto.auro.Sku.newBuilder(other.getSkuBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing LineItem instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hcl.hclmessaging.dto.auro.LineItem other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.productName)) {
        this.productName = data().deepCopy(fields()[2].schema(), other.productName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quantity)) {
        this.quantity = data().deepCopy(fields()[3].schema(), other.quantity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.storeId)) {
        this.storeId = data().deepCopy(fields()[4].schema(), other.storeId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fulfillmentType)) {
        this.fulfillmentType = data().deepCopy(fields()[5].schema(), other.fulfillmentType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sku)) {
        this.sku = data().deepCopy(fields()[6].schema(), other.sku);
        fieldSetFlags()[6] = true;
      }
      this.skuBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductId() {
      return productId;
    }

    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setProductId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'productName' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductName() {
      return productName;
    }

    /**
      * Sets the value of the 'productName' field.
      * @param value The value of 'productName'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setProductName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.productName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'productName' field has been set.
      * @return True if the 'productName' field has been set, false otherwise.
      */
    public boolean hasProductName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'productName' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearProductName() {
      productName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.Integer getQuantity() {
      return quantity;
    }

    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setQuantity(int value) {
      validate(fields()[3], value);
      this.quantity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearQuantity() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'storeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getStoreId() {
      return storeId;
    }

    /**
      * Sets the value of the 'storeId' field.
      * @param value The value of 'storeId'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setStoreId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.storeId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'storeId' field has been set.
      * @return True if the 'storeId' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'storeId' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearStoreId() {
      storeId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'fulfillmentType' field.
      * @return The value.
      */
    public java.lang.CharSequence getFulfillmentType() {
      return fulfillmentType;
    }

    /**
      * Sets the value of the 'fulfillmentType' field.
      * @param value The value of 'fulfillmentType'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setFulfillmentType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.fulfillmentType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'fulfillmentType' field has been set.
      * @return True if the 'fulfillmentType' field has been set, false otherwise.
      */
    public boolean hasFulfillmentType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'fulfillmentType' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearFulfillmentType() {
      fulfillmentType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sku' field.
      * @return The value.
      */
    public com.hcl.hclmessaging.dto.auro.Sku getSku() {
      return sku;
    }

    /**
      * Sets the value of the 'sku' field.
      * @param value The value of 'sku'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setSku(com.hcl.hclmessaging.dto.auro.Sku value) {
      validate(fields()[6], value);
      this.skuBuilder = null;
      this.sku = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sku' field has been set.
      * @return True if the 'sku' field has been set, false otherwise.
      */
    public boolean hasSku() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'sku' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Sku.Builder getSkuBuilder() {
      if (skuBuilder == null) {
        if (hasSku()) {
          setSkuBuilder(com.hcl.hclmessaging.dto.auro.Sku.newBuilder(sku));
        } else {
          setSkuBuilder(com.hcl.hclmessaging.dto.auro.Sku.newBuilder());
        }
      }
      return skuBuilder;
    }

    /**
     * Sets the Builder instance for the 'sku' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder setSkuBuilder(com.hcl.hclmessaging.dto.auro.Sku.Builder value) {
      clearSku();
      skuBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'sku' field has an active Builder instance
     * @return True if the 'sku' field has an active Builder instance
     */
    public boolean hasSkuBuilder() {
      return skuBuilder != null;
    }

    /**
      * Clears the value of the 'sku' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.LineItem.Builder clearSku() {
      sku = null;
      skuBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LineItem build() {
      try {
        LineItem record = new LineItem();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.productId = fieldSetFlags()[1] ? this.productId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.productName = fieldSetFlags()[2] ? this.productName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.quantity = fieldSetFlags()[3] ? this.quantity : (java.lang.Integer) defaultValue(fields()[3]);
        record.storeId = fieldSetFlags()[4] ? this.storeId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.fulfillmentType = fieldSetFlags()[5] ? this.fulfillmentType : (java.lang.CharSequence) defaultValue(fields()[5]);
        if (skuBuilder != null) {
          record.sku = this.skuBuilder.build();
        } else {
          record.sku = fieldSetFlags()[6] ? this.sku : (com.hcl.hclmessaging.dto.auro.Sku) defaultValue(fields()[6]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LineItem>
    WRITER$ = (org.apache.avro.io.DatumWriter<LineItem>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LineItem>
    READER$ = (org.apache.avro.io.DatumReader<LineItem>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
