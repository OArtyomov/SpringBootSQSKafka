/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hcl.hclmessaging.dto.auro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Attributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8331561946757325718L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Attributes\",\"namespace\":\"com.hcl.hclmessaging.dto.auro\",\"fields\":[{\"name\":\"createdAt\",\"type\":\"string\"},{\"name\":\"lastModifiedAt\",\"type\":\"string\"},{\"name\":\"orderNumber\",\"type\":\"string\"},{\"name\":\"channel\",\"type\":\"string\"},{\"name\":\"totalQuantity\",\"type\":\"int\"},{\"name\":\"overallDeliveryType\",\"type\":\"string\"},{\"name\":\"lineItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LineItem\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"productId\",\"type\":\"string\"},{\"name\":\"productName\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"storeId\",\"type\":[\"string\",\"null\"]},{\"name\":\"fulfillmentType\",\"type\":\"string\"},{\"name\":\"sku\",\"type\":{\"type\":\"record\",\"name\":\"Sku\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"lineItemPrice\",\"type\":{\"type\":\"record\",\"name\":\"LineItemPrice\",\"fields\":[{\"name\":\"currencyCode\",\"type\":\"string\"},{\"name\":\"itemPriceBeforeDiscount\",\"type\":\"bytes\",\"java-class\":\"java.math.BigDecimal\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":2},{\"name\":\"discount\",\"type\":\"bytes\",\"java-class\":\"java.math.BigDecimal\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":2},{\"name\":\"itemPriceAfterDiscount\",\"type\":\"bytes\",\"java-class\":\"java.math.BigDecimal\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":2}]}},{\"name\":\"images\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Image\",\"fields\":[{\"name\":\"url\",\"type\":\"string\"}]}}}]}}]}}},{\"name\":\"shippingMethod\",\"type\":{\"type\":\"record\",\"name\":\"ShippingMethod\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":{\"type\":\"record\",\"name\":\"Price\",\"fields\":[{\"name\":\"currencyCode\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"java-class\":\"java.math.BigDecimal\",\"precision\":4,\"scale\":2}]}}]}},{\"name\":\"shippingAddress\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"phoneNumber\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"deliveryNote\",\"type\":\"string\"}]}},{\"name\":\"billingAddress\",\"type\":\"Address\"},{\"name\":\"paymentInfo\",\"type\":{\"type\":\"record\",\"name\":\"PaymentInfo\",\"fields\":[{\"name\":\"cardNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"cardType\",\"type\":[\"string\",\"null\"]},{\"name\":\"cardHolderName\",\"type\":[\"string\",\"null\"]},{\"name\":\"cardExpiry\",\"type\":[\"string\",\"null\"]},{\"name\":\"paymentMethod\",\"type\":[\"string\",\"null\"]},{\"name\":\"amount\",\"type\":[\"bytes\",\"null\"],\"logicalType\":\"decimal\",\"java-class\":\"java.math.BigDecimal\",\"precision\":4,\"scale\":2}]}},{\"name\":\"orderTotal\",\"type\":{\"type\":\"record\",\"name\":\"OrderTotal\",\"fields\":[{\"name\":\"currencyCode\",\"type\":\"string\"},{\"name\":\"subtotal\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"java-class\":\"java.math.BigDecimal\",\"precision\":4,\"scale\":2},{\"name\":\"tax\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":4,\"java-class\":\"java.math.BigDecimal\",\"scale\":2},{\"name\":\"shipping\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"java-class\":\"java.math.BigDecimal\",\"precision\":4,\"scale\":2},{\"name\":\"discount\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"java-class\":\"java.math.BigDecimal\",\"precision\":4,\"scale\":2},{\"name\":\"total\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"java-class\":\"java.math.BigDecimal\",\"precision\":4,\"scale\":2}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Attributes> ENCODER =
      new BinaryMessageEncoder<Attributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Attributes> DECODER =
      new BinaryMessageDecoder<Attributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Attributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Attributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Attributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Attributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Attributes from a ByteBuffer. */
  public static Attributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence createdAt;
  @Deprecated public java.lang.CharSequence lastModifiedAt;
  @Deprecated public java.lang.CharSequence orderNumber;
  @Deprecated public java.lang.CharSequence channel;
  @Deprecated public int totalQuantity;
  @Deprecated public java.lang.CharSequence overallDeliveryType;
  @Deprecated public java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> lineItems;
  @Deprecated public com.hcl.hclmessaging.dto.auro.ShippingMethod shippingMethod;
  @Deprecated public com.hcl.hclmessaging.dto.auro.Address shippingAddress;
  @Deprecated public com.hcl.hclmessaging.dto.auro.Address billingAddress;
  @Deprecated public com.hcl.hclmessaging.dto.auro.PaymentInfo paymentInfo;
  @Deprecated public com.hcl.hclmessaging.dto.auro.OrderTotal orderTotal;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Attributes() {}

  /**
   * All-args constructor.
   * @param createdAt The new value for createdAt
   * @param lastModifiedAt The new value for lastModifiedAt
   * @param orderNumber The new value for orderNumber
   * @param channel The new value for channel
   * @param totalQuantity The new value for totalQuantity
   * @param overallDeliveryType The new value for overallDeliveryType
   * @param lineItems The new value for lineItems
   * @param shippingMethod The new value for shippingMethod
   * @param shippingAddress The new value for shippingAddress
   * @param billingAddress The new value for billingAddress
   * @param paymentInfo The new value for paymentInfo
   * @param orderTotal The new value for orderTotal
   */
  public Attributes(java.lang.CharSequence createdAt, java.lang.CharSequence lastModifiedAt, java.lang.CharSequence orderNumber, java.lang.CharSequence channel, java.lang.Integer totalQuantity, java.lang.CharSequence overallDeliveryType, java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> lineItems, com.hcl.hclmessaging.dto.auro.ShippingMethod shippingMethod, com.hcl.hclmessaging.dto.auro.Address shippingAddress, com.hcl.hclmessaging.dto.auro.Address billingAddress, com.hcl.hclmessaging.dto.auro.PaymentInfo paymentInfo, com.hcl.hclmessaging.dto.auro.OrderTotal orderTotal) {
    this.createdAt = createdAt;
    this.lastModifiedAt = lastModifiedAt;
    this.orderNumber = orderNumber;
    this.channel = channel;
    this.totalQuantity = totalQuantity;
    this.overallDeliveryType = overallDeliveryType;
    this.lineItems = lineItems;
    this.shippingMethod = shippingMethod;
    this.shippingAddress = shippingAddress;
    this.billingAddress = billingAddress;
    this.paymentInfo = paymentInfo;
    this.orderTotal = orderTotal;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return createdAt;
    case 1: return lastModifiedAt;
    case 2: return orderNumber;
    case 3: return channel;
    case 4: return totalQuantity;
    case 5: return overallDeliveryType;
    case 6: return lineItems;
    case 7: return shippingMethod;
    case 8: return shippingAddress;
    case 9: return billingAddress;
    case 10: return paymentInfo;
    case 11: return orderTotal;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: createdAt = (java.lang.CharSequence)value$; break;
    case 1: lastModifiedAt = (java.lang.CharSequence)value$; break;
    case 2: orderNumber = (java.lang.CharSequence)value$; break;
    case 3: channel = (java.lang.CharSequence)value$; break;
    case 4: totalQuantity = (java.lang.Integer)value$; break;
    case 5: overallDeliveryType = (java.lang.CharSequence)value$; break;
    case 6: lineItems = (java.util.List<com.hcl.hclmessaging.dto.auro.LineItem>)value$; break;
    case 7: shippingMethod = (com.hcl.hclmessaging.dto.auro.ShippingMethod)value$; break;
    case 8: shippingAddress = (com.hcl.hclmessaging.dto.auro.Address)value$; break;
    case 9: billingAddress = (com.hcl.hclmessaging.dto.auro.Address)value$; break;
    case 10: paymentInfo = (com.hcl.hclmessaging.dto.auro.PaymentInfo)value$; break;
    case 11: orderTotal = (com.hcl.hclmessaging.dto.auro.OrderTotal)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.CharSequence getCreatedAt() {
    return createdAt;
  }

  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.CharSequence value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'lastModifiedAt' field.
   * @return The value of the 'lastModifiedAt' field.
   */
  public java.lang.CharSequence getLastModifiedAt() {
    return lastModifiedAt;
  }

  /**
   * Sets the value of the 'lastModifiedAt' field.
   * @param value the value to set.
   */
  public void setLastModifiedAt(java.lang.CharSequence value) {
    this.lastModifiedAt = value;
  }

  /**
   * Gets the value of the 'orderNumber' field.
   * @return The value of the 'orderNumber' field.
   */
  public java.lang.CharSequence getOrderNumber() {
    return orderNumber;
  }

  /**
   * Sets the value of the 'orderNumber' field.
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.CharSequence value) {
    this.orderNumber = value;
  }

  /**
   * Gets the value of the 'channel' field.
   * @return The value of the 'channel' field.
   */
  public java.lang.CharSequence getChannel() {
    return channel;
  }

  /**
   * Sets the value of the 'channel' field.
   * @param value the value to set.
   */
  public void setChannel(java.lang.CharSequence value) {
    this.channel = value;
  }

  /**
   * Gets the value of the 'totalQuantity' field.
   * @return The value of the 'totalQuantity' field.
   */
  public java.lang.Integer getTotalQuantity() {
    return totalQuantity;
  }

  /**
   * Sets the value of the 'totalQuantity' field.
   * @param value the value to set.
   */
  public void setTotalQuantity(java.lang.Integer value) {
    this.totalQuantity = value;
  }

  /**
   * Gets the value of the 'overallDeliveryType' field.
   * @return The value of the 'overallDeliveryType' field.
   */
  public java.lang.CharSequence getOverallDeliveryType() {
    return overallDeliveryType;
  }

  /**
   * Sets the value of the 'overallDeliveryType' field.
   * @param value the value to set.
   */
  public void setOverallDeliveryType(java.lang.CharSequence value) {
    this.overallDeliveryType = value;
  }

  /**
   * Gets the value of the 'lineItems' field.
   * @return The value of the 'lineItems' field.
   */
  public java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> getLineItems() {
    return lineItems;
  }

  /**
   * Sets the value of the 'lineItems' field.
   * @param value the value to set.
   */
  public void setLineItems(java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> value) {
    this.lineItems = value;
  }

  /**
   * Gets the value of the 'shippingMethod' field.
   * @return The value of the 'shippingMethod' field.
   */
  public com.hcl.hclmessaging.dto.auro.ShippingMethod getShippingMethod() {
    return shippingMethod;
  }

  /**
   * Sets the value of the 'shippingMethod' field.
   * @param value the value to set.
   */
  public void setShippingMethod(com.hcl.hclmessaging.dto.auro.ShippingMethod value) {
    this.shippingMethod = value;
  }

  /**
   * Gets the value of the 'shippingAddress' field.
   * @return The value of the 'shippingAddress' field.
   */
  public com.hcl.hclmessaging.dto.auro.Address getShippingAddress() {
    return shippingAddress;
  }

  /**
   * Sets the value of the 'shippingAddress' field.
   * @param value the value to set.
   */
  public void setShippingAddress(com.hcl.hclmessaging.dto.auro.Address value) {
    this.shippingAddress = value;
  }

  /**
   * Gets the value of the 'billingAddress' field.
   * @return The value of the 'billingAddress' field.
   */
  public com.hcl.hclmessaging.dto.auro.Address getBillingAddress() {
    return billingAddress;
  }

  /**
   * Sets the value of the 'billingAddress' field.
   * @param value the value to set.
   */
  public void setBillingAddress(com.hcl.hclmessaging.dto.auro.Address value) {
    this.billingAddress = value;
  }

  /**
   * Gets the value of the 'paymentInfo' field.
   * @return The value of the 'paymentInfo' field.
   */
  public com.hcl.hclmessaging.dto.auro.PaymentInfo getPaymentInfo() {
    return paymentInfo;
  }

  /**
   * Sets the value of the 'paymentInfo' field.
   * @param value the value to set.
   */
  public void setPaymentInfo(com.hcl.hclmessaging.dto.auro.PaymentInfo value) {
    this.paymentInfo = value;
  }

  /**
   * Gets the value of the 'orderTotal' field.
   * @return The value of the 'orderTotal' field.
   */
  public com.hcl.hclmessaging.dto.auro.OrderTotal getOrderTotal() {
    return orderTotal;
  }

  /**
   * Sets the value of the 'orderTotal' field.
   * @param value the value to set.
   */
  public void setOrderTotal(com.hcl.hclmessaging.dto.auro.OrderTotal value) {
    this.orderTotal = value;
  }

  /**
   * Creates a new Attributes RecordBuilder.
   * @return A new Attributes RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.Attributes.Builder newBuilder() {
    return new com.hcl.hclmessaging.dto.auro.Attributes.Builder();
  }

  /**
   * Creates a new Attributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Attributes RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.Attributes.Builder newBuilder(com.hcl.hclmessaging.dto.auro.Attributes.Builder other) {
    return new com.hcl.hclmessaging.dto.auro.Attributes.Builder(other);
  }

  /**
   * Creates a new Attributes RecordBuilder by copying an existing Attributes instance.
   * @param other The existing instance to copy.
   * @return A new Attributes RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.Attributes.Builder newBuilder(com.hcl.hclmessaging.dto.auro.Attributes other) {
    return new com.hcl.hclmessaging.dto.auro.Attributes.Builder(other);
  }

  /**
   * RecordBuilder for Attributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Attributes>
    implements org.apache.avro.data.RecordBuilder<Attributes> {

    private java.lang.CharSequence createdAt;
    private java.lang.CharSequence lastModifiedAt;
    private java.lang.CharSequence orderNumber;
    private java.lang.CharSequence channel;
    private int totalQuantity;
    private java.lang.CharSequence overallDeliveryType;
    private java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> lineItems;
    private com.hcl.hclmessaging.dto.auro.ShippingMethod shippingMethod;
    private com.hcl.hclmessaging.dto.auro.ShippingMethod.Builder shippingMethodBuilder;
    private com.hcl.hclmessaging.dto.auro.Address shippingAddress;
    private com.hcl.hclmessaging.dto.auro.Address.Builder shippingAddressBuilder;
    private com.hcl.hclmessaging.dto.auro.Address billingAddress;
    private com.hcl.hclmessaging.dto.auro.Address.Builder billingAddressBuilder;
    private com.hcl.hclmessaging.dto.auro.PaymentInfo paymentInfo;
    private com.hcl.hclmessaging.dto.auro.PaymentInfo.Builder paymentInfoBuilder;
    private com.hcl.hclmessaging.dto.auro.OrderTotal orderTotal;
    private com.hcl.hclmessaging.dto.auro.OrderTotal.Builder orderTotalBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hcl.hclmessaging.dto.auro.Attributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[0].schema(), other.createdAt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastModifiedAt)) {
        this.lastModifiedAt = data().deepCopy(fields()[1].schema(), other.lastModifiedAt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[2].schema(), other.orderNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.channel)) {
        this.channel = data().deepCopy(fields()[3].schema(), other.channel);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalQuantity)) {
        this.totalQuantity = data().deepCopy(fields()[4].schema(), other.totalQuantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.overallDeliveryType)) {
        this.overallDeliveryType = data().deepCopy(fields()[5].schema(), other.overallDeliveryType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[6].schema(), other.lineItems);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shippingMethod)) {
        this.shippingMethod = data().deepCopy(fields()[7].schema(), other.shippingMethod);
        fieldSetFlags()[7] = true;
      }
      if (other.hasShippingMethodBuilder()) {
        this.shippingMethodBuilder = com.hcl.hclmessaging.dto.auro.ShippingMethod.newBuilder(other.getShippingMethodBuilder());
      }
      if (isValidValue(fields()[8], other.shippingAddress)) {
        this.shippingAddress = data().deepCopy(fields()[8].schema(), other.shippingAddress);
        fieldSetFlags()[8] = true;
      }
      if (other.hasShippingAddressBuilder()) {
        this.shippingAddressBuilder = com.hcl.hclmessaging.dto.auro.Address.newBuilder(other.getShippingAddressBuilder());
      }
      if (isValidValue(fields()[9], other.billingAddress)) {
        this.billingAddress = data().deepCopy(fields()[9].schema(), other.billingAddress);
        fieldSetFlags()[9] = true;
      }
      if (other.hasBillingAddressBuilder()) {
        this.billingAddressBuilder = com.hcl.hclmessaging.dto.auro.Address.newBuilder(other.getBillingAddressBuilder());
      }
      if (isValidValue(fields()[10], other.paymentInfo)) {
        this.paymentInfo = data().deepCopy(fields()[10].schema(), other.paymentInfo);
        fieldSetFlags()[10] = true;
      }
      if (other.hasPaymentInfoBuilder()) {
        this.paymentInfoBuilder = com.hcl.hclmessaging.dto.auro.PaymentInfo.newBuilder(other.getPaymentInfoBuilder());
      }
      if (isValidValue(fields()[11], other.orderTotal)) {
        this.orderTotal = data().deepCopy(fields()[11].schema(), other.orderTotal);
        fieldSetFlags()[11] = true;
      }
      if (other.hasOrderTotalBuilder()) {
        this.orderTotalBuilder = com.hcl.hclmessaging.dto.auro.OrderTotal.newBuilder(other.getOrderTotalBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Attributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hcl.hclmessaging.dto.auro.Attributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[0].schema(), other.createdAt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastModifiedAt)) {
        this.lastModifiedAt = data().deepCopy(fields()[1].schema(), other.lastModifiedAt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[2].schema(), other.orderNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.channel)) {
        this.channel = data().deepCopy(fields()[3].schema(), other.channel);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalQuantity)) {
        this.totalQuantity = data().deepCopy(fields()[4].schema(), other.totalQuantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.overallDeliveryType)) {
        this.overallDeliveryType = data().deepCopy(fields()[5].schema(), other.overallDeliveryType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lineItems)) {
        this.lineItems = data().deepCopy(fields()[6].schema(), other.lineItems);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shippingMethod)) {
        this.shippingMethod = data().deepCopy(fields()[7].schema(), other.shippingMethod);
        fieldSetFlags()[7] = true;
      }
      this.shippingMethodBuilder = null;
      if (isValidValue(fields()[8], other.shippingAddress)) {
        this.shippingAddress = data().deepCopy(fields()[8].schema(), other.shippingAddress);
        fieldSetFlags()[8] = true;
      }
      this.shippingAddressBuilder = null;
      if (isValidValue(fields()[9], other.billingAddress)) {
        this.billingAddress = data().deepCopy(fields()[9].schema(), other.billingAddress);
        fieldSetFlags()[9] = true;
      }
      this.billingAddressBuilder = null;
      if (isValidValue(fields()[10], other.paymentInfo)) {
        this.paymentInfo = data().deepCopy(fields()[10].schema(), other.paymentInfo);
        fieldSetFlags()[10] = true;
      }
      this.paymentInfoBuilder = null;
      if (isValidValue(fields()[11], other.orderTotal)) {
        this.orderTotal = data().deepCopy(fields()[11].schema(), other.orderTotal);
        fieldSetFlags()[11] = true;
      }
      this.orderTotalBuilder = null;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedAt() {
      return createdAt;
    }

    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setCreatedAt(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.createdAt = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastModifiedAt' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastModifiedAt() {
      return lastModifiedAt;
    }

    /**
      * Sets the value of the 'lastModifiedAt' field.
      * @param value The value of 'lastModifiedAt'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setLastModifiedAt(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.lastModifiedAt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastModifiedAt' field has been set.
      * @return True if the 'lastModifiedAt' field has been set, false otherwise.
      */
    public boolean hasLastModifiedAt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastModifiedAt' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearLastModifiedAt() {
      lastModifiedAt = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrderNumber() {
      return orderNumber;
    }

    /**
      * Sets the value of the 'orderNumber' field.
      * @param value The value of 'orderNumber'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setOrderNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.orderNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'orderNumber' field has been set.
      * @return True if the 'orderNumber' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'orderNumber' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearOrderNumber() {
      orderNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'channel' field.
      * @return The value.
      */
    public java.lang.CharSequence getChannel() {
      return channel;
    }

    /**
      * Sets the value of the 'channel' field.
      * @param value The value of 'channel'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setChannel(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.channel = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'channel' field has been set.
      * @return True if the 'channel' field has been set, false otherwise.
      */
    public boolean hasChannel() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'channel' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearChannel() {
      channel = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalQuantity' field.
      * @return The value.
      */
    public java.lang.Integer getTotalQuantity() {
      return totalQuantity;
    }

    /**
      * Sets the value of the 'totalQuantity' field.
      * @param value The value of 'totalQuantity'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setTotalQuantity(int value) {
      validate(fields()[4], value);
      this.totalQuantity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'totalQuantity' field has been set.
      * @return True if the 'totalQuantity' field has been set, false otherwise.
      */
    public boolean hasTotalQuantity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'totalQuantity' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearTotalQuantity() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'overallDeliveryType' field.
      * @return The value.
      */
    public java.lang.CharSequence getOverallDeliveryType() {
      return overallDeliveryType;
    }

    /**
      * Sets the value of the 'overallDeliveryType' field.
      * @param value The value of 'overallDeliveryType'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setOverallDeliveryType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.overallDeliveryType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'overallDeliveryType' field has been set.
      * @return True if the 'overallDeliveryType' field has been set, false otherwise.
      */
    public boolean hasOverallDeliveryType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'overallDeliveryType' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearOverallDeliveryType() {
      overallDeliveryType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'lineItems' field.
      * @return The value.
      */
    public java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> getLineItems() {
      return lineItems;
    }

    /**
      * Sets the value of the 'lineItems' field.
      * @param value The value of 'lineItems'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setLineItems(java.util.List<com.hcl.hclmessaging.dto.auro.LineItem> value) {
      validate(fields()[6], value);
      this.lineItems = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'lineItems' field has been set.
      * @return True if the 'lineItems' field has been set, false otherwise.
      */
    public boolean hasLineItems() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'lineItems' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearLineItems() {
      lineItems = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'shippingMethod' field.
      * @return The value.
      */
    public com.hcl.hclmessaging.dto.auro.ShippingMethod getShippingMethod() {
      return shippingMethod;
    }

    /**
      * Sets the value of the 'shippingMethod' field.
      * @param value The value of 'shippingMethod'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setShippingMethod(com.hcl.hclmessaging.dto.auro.ShippingMethod value) {
      validate(fields()[7], value);
      this.shippingMethodBuilder = null;
      this.shippingMethod = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'shippingMethod' field has been set.
      * @return True if the 'shippingMethod' field has been set, false otherwise.
      */
    public boolean hasShippingMethod() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'shippingMethod' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.ShippingMethod.Builder getShippingMethodBuilder() {
      if (shippingMethodBuilder == null) {
        if (hasShippingMethod()) {
          setShippingMethodBuilder(com.hcl.hclmessaging.dto.auro.ShippingMethod.newBuilder(shippingMethod));
        } else {
          setShippingMethodBuilder(com.hcl.hclmessaging.dto.auro.ShippingMethod.newBuilder());
        }
      }
      return shippingMethodBuilder;
    }

    /**
     * Sets the Builder instance for the 'shippingMethod' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setShippingMethodBuilder(com.hcl.hclmessaging.dto.auro.ShippingMethod.Builder value) {
      clearShippingMethod();
      shippingMethodBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'shippingMethod' field has an active Builder instance
     * @return True if the 'shippingMethod' field has an active Builder instance
     */
    public boolean hasShippingMethodBuilder() {
      return shippingMethodBuilder != null;
    }

    /**
      * Clears the value of the 'shippingMethod' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearShippingMethod() {
      shippingMethod = null;
      shippingMethodBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'shippingAddress' field.
      * @return The value.
      */
    public com.hcl.hclmessaging.dto.auro.Address getShippingAddress() {
      return shippingAddress;
    }

    /**
      * Sets the value of the 'shippingAddress' field.
      * @param value The value of 'shippingAddress'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setShippingAddress(com.hcl.hclmessaging.dto.auro.Address value) {
      validate(fields()[8], value);
      this.shippingAddressBuilder = null;
      this.shippingAddress = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'shippingAddress' field has been set.
      * @return True if the 'shippingAddress' field has been set, false otherwise.
      */
    public boolean hasShippingAddress() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'shippingAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Address.Builder getShippingAddressBuilder() {
      if (shippingAddressBuilder == null) {
        if (hasShippingAddress()) {
          setShippingAddressBuilder(com.hcl.hclmessaging.dto.auro.Address.newBuilder(shippingAddress));
        } else {
          setShippingAddressBuilder(com.hcl.hclmessaging.dto.auro.Address.newBuilder());
        }
      }
      return shippingAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'shippingAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setShippingAddressBuilder(com.hcl.hclmessaging.dto.auro.Address.Builder value) {
      clearShippingAddress();
      shippingAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'shippingAddress' field has an active Builder instance
     * @return True if the 'shippingAddress' field has an active Builder instance
     */
    public boolean hasShippingAddressBuilder() {
      return shippingAddressBuilder != null;
    }

    /**
      * Clears the value of the 'shippingAddress' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearShippingAddress() {
      shippingAddress = null;
      shippingAddressBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'billingAddress' field.
      * @return The value.
      */
    public com.hcl.hclmessaging.dto.auro.Address getBillingAddress() {
      return billingAddress;
    }

    /**
      * Sets the value of the 'billingAddress' field.
      * @param value The value of 'billingAddress'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setBillingAddress(com.hcl.hclmessaging.dto.auro.Address value) {
      validate(fields()[9], value);
      this.billingAddressBuilder = null;
      this.billingAddress = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'billingAddress' field has been set.
      * @return True if the 'billingAddress' field has been set, false otherwise.
      */
    public boolean hasBillingAddress() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'billingAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Address.Builder getBillingAddressBuilder() {
      if (billingAddressBuilder == null) {
        if (hasBillingAddress()) {
          setBillingAddressBuilder(com.hcl.hclmessaging.dto.auro.Address.newBuilder(billingAddress));
        } else {
          setBillingAddressBuilder(com.hcl.hclmessaging.dto.auro.Address.newBuilder());
        }
      }
      return billingAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'billingAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setBillingAddressBuilder(com.hcl.hclmessaging.dto.auro.Address.Builder value) {
      clearBillingAddress();
      billingAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'billingAddress' field has an active Builder instance
     * @return True if the 'billingAddress' field has an active Builder instance
     */
    public boolean hasBillingAddressBuilder() {
      return billingAddressBuilder != null;
    }

    /**
      * Clears the value of the 'billingAddress' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearBillingAddress() {
      billingAddress = null;
      billingAddressBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentInfo' field.
      * @return The value.
      */
    public com.hcl.hclmessaging.dto.auro.PaymentInfo getPaymentInfo() {
      return paymentInfo;
    }

    /**
      * Sets the value of the 'paymentInfo' field.
      * @param value The value of 'paymentInfo'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setPaymentInfo(com.hcl.hclmessaging.dto.auro.PaymentInfo value) {
      validate(fields()[10], value);
      this.paymentInfoBuilder = null;
      this.paymentInfo = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentInfo' field has been set.
      * @return True if the 'paymentInfo' field has been set, false otherwise.
      */
    public boolean hasPaymentInfo() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'paymentInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.PaymentInfo.Builder getPaymentInfoBuilder() {
      if (paymentInfoBuilder == null) {
        if (hasPaymentInfo()) {
          setPaymentInfoBuilder(com.hcl.hclmessaging.dto.auro.PaymentInfo.newBuilder(paymentInfo));
        } else {
          setPaymentInfoBuilder(com.hcl.hclmessaging.dto.auro.PaymentInfo.newBuilder());
        }
      }
      return paymentInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'paymentInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setPaymentInfoBuilder(com.hcl.hclmessaging.dto.auro.PaymentInfo.Builder value) {
      clearPaymentInfo();
      paymentInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paymentInfo' field has an active Builder instance
     * @return True if the 'paymentInfo' field has an active Builder instance
     */
    public boolean hasPaymentInfoBuilder() {
      return paymentInfoBuilder != null;
    }

    /**
      * Clears the value of the 'paymentInfo' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearPaymentInfo() {
      paymentInfo = null;
      paymentInfoBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderTotal' field.
      * @return The value.
      */
    public com.hcl.hclmessaging.dto.auro.OrderTotal getOrderTotal() {
      return orderTotal;
    }

    /**
      * Sets the value of the 'orderTotal' field.
      * @param value The value of 'orderTotal'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setOrderTotal(com.hcl.hclmessaging.dto.auro.OrderTotal value) {
      validate(fields()[11], value);
      this.orderTotalBuilder = null;
      this.orderTotal = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'orderTotal' field has been set.
      * @return True if the 'orderTotal' field has been set, false otherwise.
      */
    public boolean hasOrderTotal() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'orderTotal' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.OrderTotal.Builder getOrderTotalBuilder() {
      if (orderTotalBuilder == null) {
        if (hasOrderTotal()) {
          setOrderTotalBuilder(com.hcl.hclmessaging.dto.auro.OrderTotal.newBuilder(orderTotal));
        } else {
          setOrderTotalBuilder(com.hcl.hclmessaging.dto.auro.OrderTotal.newBuilder());
        }
      }
      return orderTotalBuilder;
    }

    /**
     * Sets the Builder instance for the 'orderTotal' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder setOrderTotalBuilder(com.hcl.hclmessaging.dto.auro.OrderTotal.Builder value) {
      clearOrderTotal();
      orderTotalBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'orderTotal' field has an active Builder instance
     * @return True if the 'orderTotal' field has an active Builder instance
     */
    public boolean hasOrderTotalBuilder() {
      return orderTotalBuilder != null;
    }

    /**
      * Clears the value of the 'orderTotal' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.Attributes.Builder clearOrderTotal() {
      orderTotal = null;
      orderTotalBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Attributes build() {
      try {
        Attributes record = new Attributes();
        record.createdAt = fieldSetFlags()[0] ? this.createdAt : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.lastModifiedAt = fieldSetFlags()[1] ? this.lastModifiedAt : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.orderNumber = fieldSetFlags()[2] ? this.orderNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.channel = fieldSetFlags()[3] ? this.channel : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.totalQuantity = fieldSetFlags()[4] ? this.totalQuantity : (java.lang.Integer) defaultValue(fields()[4]);
        record.overallDeliveryType = fieldSetFlags()[5] ? this.overallDeliveryType : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.lineItems = fieldSetFlags()[6] ? this.lineItems : (java.util.List<com.hcl.hclmessaging.dto.auro.LineItem>) defaultValue(fields()[6]);
        if (shippingMethodBuilder != null) {
          record.shippingMethod = this.shippingMethodBuilder.build();
        } else {
          record.shippingMethod = fieldSetFlags()[7] ? this.shippingMethod : (com.hcl.hclmessaging.dto.auro.ShippingMethod) defaultValue(fields()[7]);
        }
        if (shippingAddressBuilder != null) {
          record.shippingAddress = this.shippingAddressBuilder.build();
        } else {
          record.shippingAddress = fieldSetFlags()[8] ? this.shippingAddress : (com.hcl.hclmessaging.dto.auro.Address) defaultValue(fields()[8]);
        }
        if (billingAddressBuilder != null) {
          record.billingAddress = this.billingAddressBuilder.build();
        } else {
          record.billingAddress = fieldSetFlags()[9] ? this.billingAddress : (com.hcl.hclmessaging.dto.auro.Address) defaultValue(fields()[9]);
        }
        if (paymentInfoBuilder != null) {
          record.paymentInfo = this.paymentInfoBuilder.build();
        } else {
          record.paymentInfo = fieldSetFlags()[10] ? this.paymentInfo : (com.hcl.hclmessaging.dto.auro.PaymentInfo) defaultValue(fields()[10]);
        }
        if (orderTotalBuilder != null) {
          record.orderTotal = this.orderTotalBuilder.build();
        } else {
          record.orderTotal = fieldSetFlags()[11] ? this.orderTotal : (com.hcl.hclmessaging.dto.auro.OrderTotal) defaultValue(fields()[11]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Attributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<Attributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Attributes>
    READER$ = (org.apache.avro.io.DatumReader<Attributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
