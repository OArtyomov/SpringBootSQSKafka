/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hcl.hclmessaging.dto.auro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ProductAttributes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6334945728263184906L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductAttributes\",\"namespace\":\"com.hcl.hclmessaging.dto.auro\",\"fields\":[{\"name\":\"productUrl\",\"type\":\"string\"},{\"name\":\"colorCode\",\"type\":\"string\"},{\"name\":\"colorDisplayName\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductAttributes> ENCODER =
      new BinaryMessageEncoder<ProductAttributes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductAttributes> DECODER =
      new BinaryMessageDecoder<ProductAttributes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ProductAttributes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ProductAttributes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductAttributes>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ProductAttributes to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ProductAttributes from a ByteBuffer. */
  public static ProductAttributes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence productUrl;
  @Deprecated public java.lang.CharSequence colorCode;
  @Deprecated public java.lang.CharSequence colorDisplayName;
  @Deprecated public java.lang.CharSequence size;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductAttributes() {}

  /**
   * All-args constructor.
   * @param productUrl The new value for productUrl
   * @param colorCode The new value for colorCode
   * @param colorDisplayName The new value for colorDisplayName
   * @param size The new value for size
   */
  public ProductAttributes(java.lang.CharSequence productUrl, java.lang.CharSequence colorCode, java.lang.CharSequence colorDisplayName, java.lang.CharSequence size) {
    this.productUrl = productUrl;
    this.colorCode = colorCode;
    this.colorDisplayName = colorDisplayName;
    this.size = size;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return productUrl;
    case 1: return colorCode;
    case 2: return colorDisplayName;
    case 3: return size;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: productUrl = (java.lang.CharSequence)value$; break;
    case 1: colorCode = (java.lang.CharSequence)value$; break;
    case 2: colorDisplayName = (java.lang.CharSequence)value$; break;
    case 3: size = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'productUrl' field.
   * @return The value of the 'productUrl' field.
   */
  public java.lang.CharSequence getProductUrl() {
    return productUrl;
  }

  /**
   * Sets the value of the 'productUrl' field.
   * @param value the value to set.
   */
  public void setProductUrl(java.lang.CharSequence value) {
    this.productUrl = value;
  }

  /**
   * Gets the value of the 'colorCode' field.
   * @return The value of the 'colorCode' field.
   */
  public java.lang.CharSequence getColorCode() {
    return colorCode;
  }

  /**
   * Sets the value of the 'colorCode' field.
   * @param value the value to set.
   */
  public void setColorCode(java.lang.CharSequence value) {
    this.colorCode = value;
  }

  /**
   * Gets the value of the 'colorDisplayName' field.
   * @return The value of the 'colorDisplayName' field.
   */
  public java.lang.CharSequence getColorDisplayName() {
    return colorDisplayName;
  }

  /**
   * Sets the value of the 'colorDisplayName' field.
   * @param value the value to set.
   */
  public void setColorDisplayName(java.lang.CharSequence value) {
    this.colorDisplayName = value;
  }

  /**
   * Gets the value of the 'size' field.
   * @return The value of the 'size' field.
   */
  public java.lang.CharSequence getSize() {
    return size;
  }

  /**
   * Sets the value of the 'size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.CharSequence value) {
    this.size = value;
  }

  /**
   * Creates a new ProductAttributes RecordBuilder.
   * @return A new ProductAttributes RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder newBuilder() {
    return new com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder();
  }

  /**
   * Creates a new ProductAttributes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductAttributes RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder newBuilder(com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder other) {
    return new com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder(other);
  }

  /**
   * Creates a new ProductAttributes RecordBuilder by copying an existing ProductAttributes instance.
   * @param other The existing instance to copy.
   * @return A new ProductAttributes RecordBuilder
   */
  public static com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder newBuilder(com.hcl.hclmessaging.dto.auro.ProductAttributes other) {
    return new com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder(other);
  }

  /**
   * RecordBuilder for ProductAttributes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductAttributes>
    implements org.apache.avro.data.RecordBuilder<ProductAttributes> {

    private java.lang.CharSequence productUrl;
    private java.lang.CharSequence colorCode;
    private java.lang.CharSequence colorDisplayName;
    private java.lang.CharSequence size;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.productUrl)) {
        this.productUrl = data().deepCopy(fields()[0].schema(), other.productUrl);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.colorCode)) {
        this.colorCode = data().deepCopy(fields()[1].schema(), other.colorCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.colorDisplayName)) {
        this.colorDisplayName = data().deepCopy(fields()[2].schema(), other.colorDisplayName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.size)) {
        this.size = data().deepCopy(fields()[3].schema(), other.size);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ProductAttributes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hcl.hclmessaging.dto.auro.ProductAttributes other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.productUrl)) {
        this.productUrl = data().deepCopy(fields()[0].schema(), other.productUrl);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.colorCode)) {
        this.colorCode = data().deepCopy(fields()[1].schema(), other.colorCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.colorDisplayName)) {
        this.colorDisplayName = data().deepCopy(fields()[2].schema(), other.colorDisplayName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.size)) {
        this.size = data().deepCopy(fields()[3].schema(), other.size);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'productUrl' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductUrl() {
      return productUrl;
    }

    /**
      * Sets the value of the 'productUrl' field.
      * @param value The value of 'productUrl'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder setProductUrl(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.productUrl = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'productUrl' field has been set.
      * @return True if the 'productUrl' field has been set, false otherwise.
      */
    public boolean hasProductUrl() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'productUrl' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder clearProductUrl() {
      productUrl = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'colorCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getColorCode() {
      return colorCode;
    }

    /**
      * Sets the value of the 'colorCode' field.
      * @param value The value of 'colorCode'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder setColorCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.colorCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'colorCode' field has been set.
      * @return True if the 'colorCode' field has been set, false otherwise.
      */
    public boolean hasColorCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'colorCode' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder clearColorCode() {
      colorCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'colorDisplayName' field.
      * @return The value.
      */
    public java.lang.CharSequence getColorDisplayName() {
      return colorDisplayName;
    }

    /**
      * Sets the value of the 'colorDisplayName' field.
      * @param value The value of 'colorDisplayName'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder setColorDisplayName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.colorDisplayName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'colorDisplayName' field has been set.
      * @return True if the 'colorDisplayName' field has been set, false otherwise.
      */
    public boolean hasColorDisplayName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'colorDisplayName' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder clearColorDisplayName() {
      colorDisplayName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'size' field.
      * @return The value.
      */
    public java.lang.CharSequence getSize() {
      return size;
    }

    /**
      * Sets the value of the 'size' field.
      * @param value The value of 'size'.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder setSize(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.size = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'size' field has been set.
      * @return True if the 'size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'size' field.
      * @return This builder.
      */
    public com.hcl.hclmessaging.dto.auro.ProductAttributes.Builder clearSize() {
      size = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductAttributes build() {
      try {
        ProductAttributes record = new ProductAttributes();
        record.productUrl = fieldSetFlags()[0] ? this.productUrl : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.colorCode = fieldSetFlags()[1] ? this.colorCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.colorDisplayName = fieldSetFlags()[2] ? this.colorDisplayName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.size = fieldSetFlags()[3] ? this.size : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductAttributes>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductAttributes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductAttributes>
    READER$ = (org.apache.avro.io.DatumReader<ProductAttributes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
